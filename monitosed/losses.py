# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00d_losses.ipynb.

# %% auto 0
__all__ = ['CustomLoss']

# %% ../nbs/00d_losses.ipynb 3
import torch
import torch.nn as nn
import torch.nn.functional as F

# %% ../nbs/00d_losses.ipynb 4
class CustomLoss(nn.Module):
    def __init__(self, size_average=None, reduce=None, alpha=0.5, reduction: str = 'mean') -> None:
        super(CustomLoss, self).__init__()
        store_attr()

    def forward(self, input: torch.Tensor, target: torch.Tensor) -> torch.Tensor:
        l1 = F.l1_loss(input, target, reduction=self.reduction)
        mse = F.mse_loss(input, target, reduction=self.reduction)
        return self.alpha*l1 + (1-self.alpha)*mse

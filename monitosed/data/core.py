# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/00_data.core.ipynb.

# %% auto 0
__all__ = ['load_mats', 'read_data', 'prepare_train_data']

# %% ../../nbs/00_data.core.ipynb 3
import mat73
import scipy
from fastcore.xtras import Path
from fastcore.basics import *
import pandas as pd
import numpy as np
from tqdm.notebook import tqdm

# %% ../../nbs/00_data.core.ipynb 4
def load_mats(path, max_len=None):
    mats = []
    length = ifnone(max_len, len(path.ls()))
    for mat in tqdm(path.ls()[:length]):
        try: 
            print(f"Loading: {mat.name}")
            mats.append(mat73.loadmat(mat))
        except:
            print(f"Loading: {mat.name}")
            mats.append(scipy.io.loadmat(mat))
    return mats

# %% ../../nbs/00_data.core.ipynb 7
def read_data(mat):
    return np.stack(mat['data_clean']['trial'], axis=0)

# %% ../../nbs/00_data.core.ipynb 9
def prepare_train_data(mats, ix=None):
    train_ix = ifnone(ix, len(mats))
    return np.concatenate([read_data(mats[i]) for i in range(train_ix)])
